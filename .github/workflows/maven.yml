# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]


jobs:
  build:

    runs-on: ubuntu-latest
    services:
      mysqldb:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: <password here>
          MYSQL_DATABASE: icu-connect
        ports:
          - 3307:3306
        volumes:
          - mysqldb:/var/lib/mysql
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'oracle'
        cache: maven
    - name: Setup DB
      env: 
        SPRING_DATASOURCE_PASSWORD: <password here>
        SPRING_DATASOURCE_USER: root
        SPRING_DATASOURCE_NAME: icu-connect
        SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/icu-connect?createDatabaseIfNotExist=true
        run: |
          apt-get update
          apt-get install -y mysql-client
          mysql --host mydb -uroot -ppassword -e "SHOW DATABASES"
    - name: Build with Maven
      run: mvn clean package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
